name: RT-Thread_Packages_Test

on:
  workflow_call:
    inputs:
      rt-thread-versions:
        description: "String containing the versions of RT-thread (separated by spaces)."
        default: "branch:master tag:v4.1.1"
        required: false
        type: string
      repository:
        default: "RT-Thread/pkgs-test"
        required: false
        type: string
      branch:
        default: "main"
        required: false
        type: string

jobs:
  packages-test:
    name: ${{ github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: '${{ inputs.repository }}'
          ref: '${{ inputs.branch }}'
          path: pkgs-test
      - name: Install Tools
        shell: bash 
        run: |
          sudo apt install python3 python3-pip gcc git libncurses5-dev -y
          python3 -m pip install scons==4.4.0 requests tqdm wget html-table
      - name: Install Test Resources
        shell: bash 
        run: |
          cd ${{ github.workspace }}
          if [[ ${{ github.repository }} == *'/packages'* ]]; then \
            cp -r ../packages ../packages_temp; \
            mkdir -p ./pkgs-test/env; \
            cp -r ../packages_temp ./pkgs-test/env/packages; \
          fi
          cd pkgs-test
          PYTHONCMD="__import__('pkgs-test').Config().action_get_resources(\"${{ inputs.rt-thread-versions }}\");"
          python -c "$PYTHONCMD"
      - name: Carry Out Packages Test
        shell: bash
        run: |
          cd ${{ github.workspace }}/pkgs-test
          PYTHONCMD="import os; \
                      pkgs_test = __import__('pkgs-test'); \
                      config = pkgs_test.Config(); \
                      packages_index = pkgs_test.PackagesIndex(os.path.join(config.get_path('env'),'packages/packages')); \
                      pkgs_config_dict = packages_index.repository_seek('${{ github.repository }}'); \
                      logs = pkgs_test.Logs('artifacts_export', config.get_config_data(), pkgs_config_dict); \
                      build = pkgs_test.Build(config, pkgs_config_dict, logs); \
                      build.all();"
          python -c "$PYTHONCMD"
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts_export
          path: ${{ github.workspace }}/pkgs-test/artifacts_export
          
  check-errors:
    runs-on: ubuntu-latest
    needs: packages-test
    steps:
      - name: Download artifacts_export
        uses: actions/download-artifact@v3
        with:
          name: artifacts_export
      - name: Packages test whether or not error
        shell: bash 
        run: |
          if [ -f "index.html" ]; then str1=`cat index.html`; else str1=""; fi
          echo $str1
          str2="#f00"
          if [[ $str1 == *$str2* ]]; then echo "Software package test failed." && exit 1;\
          else echo "Software package test success.";fi
