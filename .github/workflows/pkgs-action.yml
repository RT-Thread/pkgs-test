name: RT-Thread_Packages_Test

on:
  workflow_call:
    inputs:
      rt-thread-versions:
        description: "String containing the versions of RT-thread (separated by spaces)."
        default: "branch:master tag:v4.1.1"
        required: false
        type: string
      rt-thread-repository:
        description: "RT-Thread repository."
        default: "RT-Thread/rt-thread"
        required: false
        type: string
      pkgs-test-repository:
        description: "pkgs-test repository (for pkgs-test debug only)."
        default: "RT-Thread/pkgs-test"
        required: false
        type: string
      pkgs-test-branch:
        description: "pkgs-test branch (for pkgs-test debug only)."
        default: "main"
        required: false
        type: string
      bsps:
        description: "String containing the bsps ([bsp-name]:[toolchain], separated by spaces)."
        default: "qemu-vexpress-a9:sourcery-arm stm32/stm32h750-artpi:sourcery-arm k210:sourcery-riscv-none-embed"
        required: false
        type: string
      package-repository:
        description: "Package repository to test."
        default: ${{ github.repository }}
        required: false
        type: string
      package-test-nolatest:
        description: "Do not test the latest version of the package."
        default: false
        required: false
        type: boolean
      package-test-all:
        description: "test the all of the package in RT-Thread/packages."
        default: false
        required: false
        type: boolean
      check-errors:
        description: "Choose whether to check for errors."
        default: true
        required: false
        type: boolean
      deploy-pages:
        description: "Choose whether to deploy pages."
        default: false
        required: false
        type: boolean
jobs:
  packages-test:
    name: ${{ github.repository }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          path: repository
      - uses: actions/checkout@v3
        with:
          repository: '${{ inputs.pkgs-test-repository }}'
          ref: '${{ inputs.pkgs-test-branch }}'
          path: pkgs-test
      - name: Install Tools
        shell: bash 
        run: |
          sudo apt install python3 python3-pip gcc git libncurses5-dev tree -y
          python3 -m pip install scons==4.4.0 requests tqdm wget dominate PyGithub 
      - name: Copy RT-Thread/packages to env
        if: "${{ endsWith(github.repository, '/packages') == true }}"
        shell: bash 
        run: |
          cd ${{ github.workspace }}
          mkdir -p ./pkgs-test/env
          cp -r ./repository ./pkgs-test/env/packages
      - name: Install Test Resources
        shell: bash
        run: |
          cd ${{ github.workspace }}/pkgs-test
          python pkgs-test.py config --rtthread='${{ inputs.rt-thread-versions }}'
          python pkgs-test.py config --bsps='${{ inputs.bsps }}'
          python pkgs-test.py download
      - name: Carry Out Packages Test
        if: ${{ inputs.package-test-all == false }}
        shell: bash
        run: |
          cd ${{ github.workspace }}/pkgs-test
          if [[ ${{ inputs.package-test-nolatest}} ]]; then
            echo 'Carry Out Packages Test (nolatest).'
            python pkgs-test.py --repository='${{ inputs.package-repository }}' --nolatest
          else
            echo 'Carry Out Packages Test.'
            python pkgs-test.py --repository='${{ inputs.package-repository }}'
          fi
      - name: Carry Out All Packages Test
        if: ${{ inputs.package-test-all == true }}
        shell: bash
        run: |
          cd ${{ github.workspace }}/pkgs-test
          if [[ ${{ inputs.package-test-nolatest}} ]]; then
            echo 'Carry Out All Packages Test (nolatest).'
            python pkgs-test.py --pkg=all --nolatest
          else
            echo 'Carry Out All Packages Test.'
            python pkgs-test.py --pkg=all
          fi     
      - uses: actions/upload-artifact@v3
        with:
          name: artifacts_export
          path: ${{ github.workspace }}/pkgs-test/artifacts_export

  check-errors:
    runs-on: ubuntu-latest
    needs: packages-test
    if: "${{ inputs.check-errors }}"
    steps:
      - uses: actions/checkout@v3
        with:
          repository: '${{ inputs.pkgs-test-repository }}'
          ref: '${{ inputs.pkgs-test-branch }}'      
      - name: Download artifacts_export
        uses: actions/download-artifact@v3
        with:
          name: artifacts_export
      - name: Install Tools
        shell: bash 
        run: |
          sudo apt install python3 python3-pip -y
          python3 -m pip install requests tqdm wget dominate PyGithub 
      - name: Packages test whether or not error
        shell: bash 
        run: |
          python pkgs-test.py check --file='pkgs_res.json'

  Deploy-Pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: packages-test
    if: "${{ endsWith(github.repository, '/packages') == true && inputs.deploy-pages }}"
    steps:
      - name: Download artifacts_export
        uses: actions/download-artifact@v3
        with:
          name: artifacts_export
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
